{"ast":null,"code":"import _objectWithoutProperties from \"/home/afikri/WebApps/Playground/leaflet/indonesia-choropleth-map/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"attributes\", \"bounds\"],\n    _excluded2 = [\"children\"];\nimport { createElementHook, createElementObject, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport var useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n  var attributes = props.attributes,\n      bounds = props.bounds,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(function (name) {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  var overlay = new LeafletSVGOverlay(container, bounds, options);\n  return createElementObject(overlay, context, container);\n}, updateMediaOverlay);\nexport var useSVGOverlay = createLayerHook(useSVGOverlayElement);\n\nfunction SVGOverlayComponent(_ref, forwardedRef) {\n  var children = _ref.children,\n      options = _objectWithoutProperties(_ref, _excluded2);\n\n  var _useSVGOverlay$curren = useSVGOverlay(options).current,\n      instance = _useSVGOverlay$curren.instance,\n      container = _useSVGOverlay$curren.container;\n  useImperativeHandle(forwardedRef, function () {\n    return instance;\n  });\n  return container == null || children == null ? null : /*#__PURE__*/createPortal(children, container);\n}\n\nexport var SVGOverlay = /*#__PURE__*/forwardRef(SVGOverlayComponent);","map":null,"metadata":{},"sourceType":"module"}