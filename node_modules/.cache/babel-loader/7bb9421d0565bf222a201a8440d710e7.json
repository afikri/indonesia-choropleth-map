{"ast":null,"code":"import { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport statesData from \"./id-density.json\";\nimport { style } from \"./utils.js\";\n\nvar Highlight = function Highlight() {\n  var map = useMap();\n  useEffect(function () {\n    // control that shows state info on hover\n    var info = L.control();\n\n    info.onAdd = function () {\n      info._div = L.DomUtil.create(\"div\", \"info\");\n      info.update();\n      return info._div;\n    };\n\n    info.update = function (props) {\n      info._div.innerHTML = \"<h4>Indonesia Population Density</h4>\" + (props ? \"<b>\" + props.province + \"</b><br />\" + props.density + \" people / mi<sup>2</sup>\" : \"Hover over a province\");\n    };\n\n    info.addTo(map);\n\n    var highlightFeature = function highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        weight: 5,\n        color: \"#666\",\n        dashArray: \"\",\n        fillOpacity: 0.7\n      });\n\n      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n        layer.bringToFront();\n      }\n\n      info.update(layer.feature.properties);\n    };\n\n    var geojson;\n\n    var resetHighlight = function resetHighlight(e) {\n      geojson.resetStyle(e.target);\n      info.update();\n    };\n\n    var zoomToFeature = function zoomToFeature(e) {\n      map.fitBounds(e.target.getBounds());\n    };\n\n    var onEachFeature = function onEachFeature(feature, layer) {\n      layer.on({\n        mouseover: highlightFeature,\n        mouseout: resetHighlight,\n        click: zoomToFeature\n      });\n    };\n\n    geojson = L.geoJson(statesData, {\n      style: style,\n      onEachFeature: onEachFeature\n    }).addTo(map);\n  }, []);\n  return null;\n};\n\nexport default Highlight;","map":{"version":3,"names":["useMap","L","useEffect","statesData","style","Highlight","map","info","control","onAdd","_div","DomUtil","create","update","props","innerHTML","province","density","addTo","highlightFeature","e","layer","target","setStyle","weight","color","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","feature","properties","geojson","resetHighlight","resetStyle","zoomToFeature","fitBounds","getBounds","onEachFeature","on","mouseover","mouseout","click","geoJson"],"sources":["/home/afikri/WebApps/Playground/leaflet/indonesia-choropleth-map/src/Highlight.js"],"sourcesContent":["import { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport statesData from \"./id-density.json\";\nimport { style } from \"./utils.js\";\n\nconst Highlight = () => {\n  const map = useMap();\n\n  useEffect(() => {\n    // control that shows state info on hover\n    const info = L.control();\n\n    info.onAdd = () => {\n      info._div = L.DomUtil.create(\"div\", \"info\");\n      info.update();\n      return info._div;\n    };\n\n    info.update = (props) => {\n      info._div.innerHTML =\n        \"<h4>Indonesia Population Density</h4>\" +\n        (props\n          ? \"<b>\" +\n          props.province +\n          \"</b><br />\" +\n          props.density +\n          \" people / mi<sup>2</sup>\"\n          : \"Hover over a province\");\n    };\n\n    info.addTo(map);\n\n    const highlightFeature = (e) => {\n      const layer = e.target;\n\n      layer.setStyle({\n        weight: 5,\n        color: \"#666\",\n        dashArray: \"\",\n        fillOpacity: 0.7\n      });\n\n      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n        layer.bringToFront();\n      }\n\n      info.update(layer.feature.properties);\n    };\n\n    let geojson;\n\n    const resetHighlight = (e) => {\n      geojson.resetStyle(e.target);\n      info.update();\n    };\n\n    const zoomToFeature = (e) => {\n      map.fitBounds(e.target.getBounds());\n    };\n\n    const onEachFeature = (feature, layer) => {\n      layer.on({\n        mouseover: highlightFeature,\n        mouseout: resetHighlight,\n        click: zoomToFeature\n      });\n    };\n\n    geojson = L.geoJson(statesData, {\n      style,\n      onEachFeature: onEachFeature\n    }).addTo(map);\n  }, []);\n\n  return null;\n};\n\nexport default Highlight;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EACtB,IAAMC,GAAG,GAAGN,MAAM,EAAlB;EAEAE,SAAS,CAAC,YAAM;IACd;IACA,IAAMK,IAAI,GAAGN,CAAC,CAACO,OAAF,EAAb;;IAEAD,IAAI,CAACE,KAAL,GAAa,YAAM;MACjBF,IAAI,CAACG,IAAL,GAAYT,CAAC,CAACU,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,MAAxB,CAAZ;MACAL,IAAI,CAACM,MAAL;MACA,OAAON,IAAI,CAACG,IAAZ;IACD,CAJD;;IAMAH,IAAI,CAACM,MAAL,GAAc,UAACC,KAAD,EAAW;MACvBP,IAAI,CAACG,IAAL,CAAUK,SAAV,GACE,2CACCD,KAAK,GACF,QACFA,KAAK,CAACE,QADJ,GAEF,YAFE,GAGFF,KAAK,CAACG,OAHJ,GAIF,0BALI,GAMF,uBAPJ,CADF;IASD,CAVD;;IAYAV,IAAI,CAACW,KAAL,CAAWZ,GAAX;;IAEA,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;MAC9B,IAAMC,KAAK,GAAGD,CAAC,CAACE,MAAhB;MAEAD,KAAK,CAACE,QAAN,CAAe;QACbC,MAAM,EAAE,CADK;QAEbC,KAAK,EAAE,MAFM;QAGbC,SAAS,EAAE,EAHE;QAIbC,WAAW,EAAE;MAJA,CAAf;;MAOA,IAAI,CAAC1B,CAAC,CAAC2B,OAAF,CAAUC,EAAX,IAAiB,CAAC5B,CAAC,CAAC2B,OAAF,CAAUE,KAA5B,IAAqC,CAAC7B,CAAC,CAAC2B,OAAF,CAAUG,IAApD,EAA0D;QACxDV,KAAK,CAACW,YAAN;MACD;;MAEDzB,IAAI,CAACM,MAAL,CAAYQ,KAAK,CAACY,OAAN,CAAcC,UAA1B;IACD,CAfD;;IAiBA,IAAIC,OAAJ;;IAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAChB,CAAD,EAAO;MAC5Be,OAAO,CAACE,UAAR,CAAmBjB,CAAC,CAACE,MAArB;MACAf,IAAI,CAACM,MAAL;IACD,CAHD;;IAKA,IAAMyB,aAAa,GAAG,SAAhBA,aAAgB,CAAClB,CAAD,EAAO;MAC3Bd,GAAG,CAACiC,SAAJ,CAAcnB,CAAC,CAACE,MAAF,CAASkB,SAAT,EAAd;IACD,CAFD;;IAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACR,OAAD,EAAUZ,KAAV,EAAoB;MACxCA,KAAK,CAACqB,EAAN,CAAS;QACPC,SAAS,EAAExB,gBADJ;QAEPyB,QAAQ,EAAER,cAFH;QAGPS,KAAK,EAAEP;MAHA,CAAT;IAKD,CAND;;IAQAH,OAAO,GAAGlC,CAAC,CAAC6C,OAAF,CAAU3C,UAAV,EAAsB;MAC9BC,KAAK,EAALA,KAD8B;MAE9BqC,aAAa,EAAEA;IAFe,CAAtB,EAGPvB,KAHO,CAGDZ,GAHC,CAAV;EAID,CAhEQ,EAgEN,EAhEM,CAAT;EAkEA,OAAO,IAAP;AACD,CAtED;;AAwEA,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}